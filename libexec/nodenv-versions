#!/usr/bin/env bash
# Summary: List installed Node versions
# Usage: nodenv versions [--bare] [--skip-aliases]
#
# Lists all Node versions found in `$NODENV_ROOT/versions/*'.

set -e
[ -n "$NODENV_DEBUG" ] && set -x

unset bare
unset skip_aliases
# Provide nodenv completions
for arg; do
  case "$arg" in
  --complete )
    echo --bare
    echo --skip-aliases
    exit ;;
  --bare ) bare=1 ;;
  --skip-aliases ) skip_aliases=1 ;;
  * )
    nodenv-help --usage versions >&2
    exit 1
    ;;
  esac
done

versions_dir="${NODENV_ROOT}/versions"

if ! enable -f "${BASH_SOURCE%/*}"/nodenv-realpath.dylib realpath 2>/dev/null; then
  if [ -n "$NODENV_NATIVE_EXT" ]; then
    echo "nodenv: failed to load \`realpath' builtin" >&2
    exit 1
  fi

  READLINK=$(type -p greadlink readlink 2>/dev/null | head -n1)
  if [ -z "$READLINK" ]; then
    echo "nodenv: cannot find readlink - are you missing GNU coreutils?" >&2
    exit 1
  fi

  resolve_link() {
    $READLINK "$1"
  }

  realpath() {
    local cwd="$PWD"
    local path="$1"
    local name

    while [ -n "$path" ]; do
      name="${path##*/}"
      [ "$name" = "$path" ] || cd "${path%/*}"
      path="$(resolve_link "$name" || true)"
    done

    echo "${PWD}/$name"
    cd "$cwd"
  }
fi

if [ -d "$versions_dir" ]; then
  versions_dir="$(realpath "$versions_dir")"
fi

list_versions() {
  shopt -s nullglob
  for path in "$versions_dir"/* "$versions_dir"/lts/*; do
    if [ -d "$path" ]; then
      if [ ! -d "$path/bin" ]; then continue; fi

      if [ -n "$skip_aliases" ] && [ -L "$path" ]; then
        target="$(realpath "$path")"
        [ "${target%/*}" != "$versions_dir" ] || continue
      fi
      echo "${path#"${versions_dir}/"}"
    fi
  done
  shopt -u nullglob
}

if [ -n "$bare" ]; then
  list_versions
  exit 0
fi

sort_versions() {
  sed -E 'h; s/[~^<>=[:space:]]//g; s/^([[:digit:]])/a.\1/g; s/[+-]/./g; s/$/.0.0.0.0/; G; s/\n/ /' \
  | LC_ALL=C sort -t. -k 1,1 -k 2,2n -k 3,3n -k 4,4n -k 5,5n \
  | cut -d' ' -f 2-
}

versions="$(
  if NODENV_VERSION=system nodenv-which node >/dev/null 2>&1; then
    echo system
  fi
  list_versions | sort_versions
)"

if [ -z "$versions" ]; then
  echo "Warning: no Node detected on the system" >&2
  exit 1
fi

current_version="$(nodenv-version-name || true)"
while read -r version; do
  if [ "$version" == "$current_version" ]; then
    echo "* $(nodenv-version 2>/dev/null)"
  else
    echo "  $version"
  fi
done <<<"$versions"
